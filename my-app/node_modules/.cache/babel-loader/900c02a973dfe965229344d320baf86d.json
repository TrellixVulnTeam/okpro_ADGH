{"ast":null,"code":"var _jsxFileName = \"C:\\\\Acer D\\\\Study\\\\Khoahoc-Reactjs-KTCITY\\\\Khoahoc-Reactjs-KTCITY\\\\REACT\\\\my-app\\\\src\\\\CountContextApp.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from \"react\"; //Bài 190,191: Thực hành CountContext phần 1,2,\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountContext = /*#__PURE__*/createContext();\n\nconst CountProvider = props => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const value = [count, setCount];\n  return /*#__PURE__*/_jsxDEV(CountContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountProvider, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = CountProvider;\n\nconst useCount = () => {\n  _s2();\n\n  const context = useContext(CountContext);\n  if (typeof context === \"undefined\") throw new Error(\"useCount must be used within a CountProvider\");\n  return context;\n};\n\n_s2(useCount, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst CountDisplay = () => {\n  _s3();\n\n  const [count] = useCount();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"The count is: \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s3(CountDisplay, \"O3YZMEGPX85hnL2m+JvB8QTTLww=\", false, function () {\n  return [useCount];\n});\n\n_c2 = CountDisplay;\n\nconst Counter = () => {\n  _s4();\n\n  // const setCount = () => {};\n  const [, setCount] = useCount();\n\n  const increment = () => setCount(count => count + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: increment,\n    className: \"p-4 bg-purple-400\\r text-white\\r rounded-md\",\n    children: \"Increment count\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(Counter, \"JXJIlu71ayNQF4yTKOORUnIM4eU=\", false, function () {\n  return [useCount];\n});\n\n_c3 = Counter;\n\nconst CountContextApp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center p-5 gap-x-5\",\n    children: [/*#__PURE__*/_jsxDEV(CountProvider, {\n      children: /*#__PURE__*/_jsxDEV(CountDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = CountContextApp;\nexport default CountContextApp;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CountProvider\");\n$RefreshReg$(_c2, \"CountDisplay\");\n$RefreshReg$(_c3, \"Counter\");\n$RefreshReg$(_c4, \"CountContextApp\");","map":{"version":3,"sources":["C:/Acer D/Study/Khoahoc-Reactjs-KTCITY/Khoahoc-Reactjs-KTCITY/REACT/my-app/src/CountContextApp.js"],"names":["React","createContext","useContext","useState","CountContext","CountProvider","props","count","setCount","value","useCount","context","Error","CountDisplay","Counter","increment","CountContextApp"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D,C,CACA;;;AACA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;;AAEA,MAAMI,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMM,KAAK,GAAG,CAACF,KAAD,EAAQC,QAAR,CAAd;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA,OAAyCH;AAAzC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAND;;GAAMD,a;;KAAAA,a;;AAQN,MAAMK,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGT,UAAU,CAACE,YAAD,CAA1B;AACA,MAAI,OAAOO,OAAP,KAAmB,WAAvB,EACE,MAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACF,SAAOD,OAAP;AACD,CALD;;IAAMD,Q;;AAON,MAAMG,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACN,KAAD,IAAUG,QAAQ,EAAxB;AACA,sBAAO;AAAA,iCAAoBH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;IAAMM,Y;UACYH,Q;;;MADZG,Y;;AAIN,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,GAAGN,QAAH,IAAeE,QAAQ,EAA7B;;AACA,QAAMK,SAAS,GAAG,MAAMP,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAhC;;AACA,sBACE;AACE,IAAA,OAAO,EAAEQ,SADX;AAEE,IAAA,SAAS,EAAC,6CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdD;;IAAMD,O;UAEiBJ,Q;;;MAFjBI,O;;AAeN,MAAME,eAAe,GAAG,MAAM;AAC5B,sBACE;AAAK,IAAA,SAAS,EAAC,8CAAf;AAAA,4BAKE,QAAC,aAAD;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;MAAMA,e;AAeN,eAAeA,eAAf","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n//Bài 190,191: Thực hành CountContext phần 1,2,\r\nconst CountContext = createContext();\r\n\r\nconst CountProvider = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const value = [count, setCount];\r\n  return (\r\n    <CountContext.Provider value={value} {...props}></CountContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCount = () => {\r\n  const context = useContext(CountContext);\r\n  if (typeof context === \"undefined\")\r\n    throw new Error(\"useCount must be used within a CountProvider\");\r\n  return context;\r\n};\r\n\r\nconst CountDisplay = () => {\r\n  const [count] = useCount();\r\n  return <div>The count is: {count}</div>;\r\n};\r\nconst Counter = () => {\r\n  // const setCount = () => {};\r\n  const [, setCount] = useCount();\r\n  const increment = () => setCount((count) => count + 1);\r\n  return (\r\n    <button\r\n      onClick={increment}\r\n      className=\"p-4 bg-purple-400\r\n     text-white\r\n      rounded-md\"\r\n    >\r\n      Increment count\r\n    </button>\r\n  );\r\n};\r\nconst CountContextApp = () => {\r\n  return (\r\n    <div className=\"flex items-center justify-center p-5 gap-x-5\">\r\n      {/* để sử dụng context thì countDisplay và\r\n       counter phải nằm trong countProvider \r\n       thì 2 cái kia mới truy xuất được giá trị trong countProvider\r\n       */}\r\n      <CountProvider>\r\n        <CountDisplay></CountDisplay>\r\n      </CountProvider>\r\n      <Counter></Counter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountContextApp;\r\n"]},"metadata":{},"sourceType":"module"}