{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useHackerNewAPI() {\n  _s();\n\n  const [hits, setHits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleFetchData = useRef({});\n  const [url, setUrl] = useState(`https://hn.algolia.com/api/v1/search?query=\"\"`);\n  const isMouted = useRef(true);\n  useEffect(() => {\n    return () => {\n      // unmouted component\n      isMouted.current = false;\n    };\n  }, []);\n\n  handleFetchData.current = async () => {\n    setLoading(true);\n\n    try {\n      var _res$data;\n\n      const res = await axios.get(url);\n      console.log(\"handleFetchres ~ res\", res.data); // if (isMouted.current) {\n\n      setHits(((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.hits) || []);\n      setLoading(false); // }\n    } catch (err) {\n      setLoading(false);\n      setErrorMessage(`The error hapend ${err}`);\n    }\n  }; // muốn dùng debounce phải npm install lodash\n  // const handleUpdateQuery = lodash.debounce((e) => {\n  //   setQuery(e.target.value);\n  // }, 500);\n\n\n  useEffect(() => {\n    handleFetchData.current();\n  }, [url]);\n  return {\n    hits,\n    setUrl,\n    loading,\n    errorMessage\n  };\n}\n\n_s(useHackerNewAPI, \"nCeISZBQb+IaoL7DQJgqSlybgNo=\");","map":{"version":3,"sources":["E:/Khoahoc-Reactjs-KTCITY/REACT/my-app/src/hooks/useHackerNewAPI.js"],"names":["axios","useEffect","useRef","useState","useHackerNewAPI","hits","setHits","loading","setLoading","errorMessage","setErrorMessage","handleFetchData","url","setUrl","isMouted","current","res","get","console","log","data","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMQ,eAAe,GAAGT,MAAM,CAAC,EAAD,CAA9B;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAC3B,+CAD2B,CAA9B;AAGA,QAAMW,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX;AACAa,MAAAA,QAAQ,CAACC,OAAT,GAAmB,KAAnB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAMAJ,EAAAA,eAAe,CAACI,OAAhB,GAA0B,YAAY;AACpCP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AAAA;;AACF,YAAMQ,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUL,GAAV,CAAlB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,GAAG,CAACI,IAAxC,EAFE,CAIF;;AACAd,MAAAA,OAAO,CAAC,cAAAU,GAAG,CAACI,IAAJ,wDAAUf,IAAV,KAAkB,EAAnB,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CANE,CAOF;AACD,KARD,CAQE,OAAOa,GAAP,EAAY;AACZb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,eAAe,CAAE,oBAAmBW,GAAI,EAAzB,CAAf;AACD;AACF,GAdD,CAfwC,CA8BxC;AACA;AACA;AACA;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe,CAACI,OAAhB;AACD,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT;AAGA,SAAO;AACLP,IAAAA,IADK;AAELQ,IAAAA,MAFK;AAGLN,IAAAA,OAHK;AAILE,IAAAA;AAJK,GAAP;AAMD;;GA3CuBL,e","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useHackerNewAPI() {\r\n  const [hits, setHits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const handleFetchData = useRef({});\r\n  const [url, setUrl] = useState(\r\n    `https://hn.algolia.com/api/v1/search?query=\"\"`\r\n  );\r\n  const isMouted = useRef(true);\r\n  useEffect(() => {\r\n    return () => {\r\n      // unmouted component\r\n      isMouted.current = false;\r\n    };\r\n  }, []);\r\n  handleFetchData.current = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(url);\r\n      console.log(\"handleFetchres ~ res\", res.data);\r\n\r\n      // if (isMouted.current) {\r\n      setHits(res.data?.hits || []);\r\n      setLoading(false);\r\n      // }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setErrorMessage(`The error hapend ${err}`);\r\n    }\r\n  };\r\n  // muốn dùng debounce phải npm install lodash\r\n  // const handleUpdateQuery = lodash.debounce((e) => {\r\n  //   setQuery(e.target.value);\r\n  // }, 500);\r\n  useEffect(() => {\r\n    handleFetchData.current();\r\n  }, [url]);\r\n  return {\r\n    hits,\r\n    setUrl,\r\n    loading,\r\n    errorMessage,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}