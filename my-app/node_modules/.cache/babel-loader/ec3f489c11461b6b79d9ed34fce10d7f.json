{"ast":null,"code":"var _jsxFileName = \"E:\\\\Khoahoc-Reactjs-KTCITY\\\\REACT\\\\my-app\\\\src\\\\components\\\\form\\\\SignUpFormFinal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\"; //Bài 128: Bài tập SignUpForm - Phân tích và code giao diện\n//Bài 129: Bài tập SignUpForm - Chia nhỏ và tái sử dụng components\n//Bài 130: Bài tập SignUpForm - Tìm hiểu và sử dụng hook useField\n//Bài 131: Bài tập SignUpForm - Tối ưu components và validtion\n//Bài 132: Bài tập SignUpForm - Reset form và submitting\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpFormFinal = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      intro: \"\",\n      job: \"\",\n      terms: false\n    } // validationSchema={Yup.object({\n    //   firstName: Yup.string().required(\"Required\"),\n    //   lastName: Yup.string().required(\"Required\"),\n    //   email: Yup.string().email().required(\"Required\"),\n    //   intro: Yup.string().required(\"Required\"),\n    //   job: Yup.string().required(\"Required\"),\n    //   terms: Yup.boolean().oneOf(\n    //     [true],\n    //     \"Please check the terms and conditions\"\n    //   ),\n    // })}\n    ,\n    onSubmit: (values, actions) => {\n      console.log(values);\n      console.log(actions);\n      actions.resetForm({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        intro: \"\",\n        job: \"\",\n        terms: false\n      });\n      setTimeout(() => {\n        actions.setSubmitting(false);\n      }, 5000);\n    },\n    children: formik => {\n      console.log(formik);\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"p-10 w-full max-w-[500px] mx-auto\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Firt name\",\n          name: \"firstName\",\n          placeholder: \"Enter your first name\",\n          id: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          placeholder: \"Enter your last name\",\n          id: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Email address\",\n          name: \"email\",\n          placeholder: \"Enter your email address\",\n          id: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyTextarea, {\n          label: \"Introduce yourself\",\n          name: \"intro\",\n          placeholder: \"Enter your introduce\",\n          id: \"intro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MySelectbox, {\n          label: \"Select your job\",\n          name: \"job\",\n          id: \"job\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Chon--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"frontend\",\n            children: \" FE developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"backend\",\n            children: \" BE developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fullstack\",\n            children: \" Full developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyCheckbox, {\n          name: \"terms\",\n          id: \"terms\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pt-[-10px]\",\n            children: \"I accpept the terms and conditians\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full p-4 bg-blue-500\\r font-semibold rounded-md\\r text-white\",\n            disabled: formik.isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; //useField\n//destructuring\n//rest parameter ...\n// spread opeartor\n\n\n_c = SignUpFormFinal;\n\nconst MyInput = _ref => {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props);\n  console.log(props); //{label, ...props}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-2 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"p-4 rounded-md border border-gray-400\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = MyInput;\n\nconst MyTextarea = _ref2 => {\n  _s2();\n\n  let {\n    label,\n    ...props\n  } = _ref2;\n  const [field, meta] = useField(props);\n  console.log(props); //{label, ...props}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-2 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      className: \"p-4 rounded-md border border-gray-400 h-[150px]\\r resize-none\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MyTextarea, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c3 = MyTextarea;\n\nconst MySelectbox = _ref3 => {\n  _s3();\n\n  let {\n    label,\n    ...props\n  } = _ref3;\n  const [field, meta] = useField(props);\n  console.log(props); //{label, ...props}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-2 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      type: \"text\",\n      className: \"p-4 rounded-md border border-gray-400\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(MySelectbox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c4 = MySelectbox;\n\nconst MyCheckbox = _ref4 => {\n  _s4();\n\n  let {\n    children,\n    ...props\n  } = _ref4;\n  const [field, meta] = useField(props);\n  console.log(props); //{label, ...props}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-2 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"flex item-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-4 h-[22px]\",\n        type: \"checkbox\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(MyCheckbox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c5 = MyCheckbox;\nexport default SignUpFormFinal;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SignUpFormFinal\");\n$RefreshReg$(_c2, \"MyInput\");\n$RefreshReg$(_c3, \"MyTextarea\");\n$RefreshReg$(_c4, \"MySelectbox\");\n$RefreshReg$(_c5, \"MyCheckbox\");","map":{"version":3,"sources":["E:/Khoahoc-Reactjs-KTCITY/REACT/my-app/src/components/form/SignUpFormFinal.js"],"names":["React","Formik","Form","Field","ErrorMessage","useField","Yup","SignUpFormFinal","firstName","lastName","email","intro","job","terms","values","actions","console","log","resetForm","setTimeout","setSubmitting","formik","isSubmitting","MyInput","label","props","field","meta","id","name","touched","error","MyTextarea","MySelectbox","MyCheckbox","children"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n//Bài 128: Bài tập SignUpForm - Phân tích và code giao diện\r\n//Bài 129: Bài tập SignUpForm - Chia nhỏ và tái sử dụng components\r\n//Bài 130: Bài tập SignUpForm - Tìm hiểu và sử dụng hook useField\r\n//Bài 131: Bài tập SignUpForm - Tối ưu components và validtion\r\n//Bài 132: Bài tập SignUpForm - Reset form và submitting\r\nconst SignUpFormFinal = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        intro: \"\",\r\n        job: \"\",\r\n        terms: false,\r\n      }}\r\n      // validationSchema={Yup.object({\r\n      //   firstName: Yup.string().required(\"Required\"),\r\n      //   lastName: Yup.string().required(\"Required\"),\r\n      //   email: Yup.string().email().required(\"Required\"),\r\n      //   intro: Yup.string().required(\"Required\"),\r\n      //   job: Yup.string().required(\"Required\"),\r\n      //   terms: Yup.boolean().oneOf(\r\n      //     [true],\r\n      //     \"Please check the terms and conditions\"\r\n      //   ),\r\n      // })}\r\n      onSubmit={(values, actions) => {\r\n        console.log(values);\r\n        console.log(actions);\r\n        actions.resetForm({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          intro: \"\",\r\n          job: \"\",\r\n          terms: false,\r\n        });\r\n        setTimeout(() => {\r\n          actions.setSubmitting(false);\r\n        }, 5000);\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        console.log(formik);\r\n        return (\r\n          <Form\r\n            className=\"p-10 w-full max-w-[500px] mx-auto\"\r\n            autoComplete=\"off\"\r\n          >\r\n            <MyInput\r\n              label=\"Firt name\"\r\n              name=\"firstName\"\r\n              placeholder=\"Enter your first name\"\r\n              id=\"firstName\"\r\n            ></MyInput>\r\n            <MyInput\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              placeholder=\"Enter your last name\"\r\n              id=\"lastName\"\r\n            ></MyInput>\r\n            <MyInput\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email address\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n            ></MyInput>\r\n            <MyTextarea\r\n              label=\"Introduce yourself\"\r\n              name=\"intro\"\r\n              placeholder=\"Enter your introduce\"\r\n              id=\"intro\"\r\n            ></MyTextarea>\r\n            <MySelectbox label=\"Select your job\" name=\"job\" id=\"job\">\r\n              <option value=\"\">--Chon--</option>\r\n              <option value=\"frontend\"> FE developer</option>\r\n              <option value=\"backend\"> BE developer</option>\r\n              <option value=\"fullstack\"> Full developer</option>\r\n            </MySelectbox>\r\n            <MyCheckbox name=\"terms\" id=\"terms\">\r\n              <p className=\"pt-[-10px]\">I accpept the terms and conditians</p>\r\n            </MyCheckbox>\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full p-4 bg-blue-500\r\n              font-semibold rounded-md\r\n            text-white\"\r\n                disabled={formik.isSubmitting}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n//useField\r\n//destructuring\r\n//rest parameter ...\r\n// spread opeartor\r\nconst MyInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  console.log(props);\r\n  //{label, ...props}\r\n  return (\r\n    <div className=\"flex flex-col gap-2 mb-4\">\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"p-4 rounded-md border border-gray-400\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-red-500\">{meta.error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nconst MyTextarea = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  console.log(props);\r\n  //{label, ...props}\r\n  return (\r\n    <div className=\"flex flex-col gap-2 mb-4\">\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <textarea\r\n        type=\"text\"\r\n        className=\"p-4 rounded-md border border-gray-400 h-[150px]\r\n        resize-none\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-red-500\">{meta.error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nconst MySelectbox = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  console.log(props);\r\n  //{label, ...props}\r\n  return (\r\n    <div className=\"flex flex-col gap-2 mb-4\">\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select\r\n        type=\"text\"\r\n        className=\"p-4 rounded-md border border-gray-400\"\r\n        {...field}\r\n        {...props}\r\n      ></select>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-red-500\">{meta.error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  console.log(props);\r\n  //{label, ...props}\r\n  return (\r\n    <div className=\"flex flex-col gap-2 mb-4\">\r\n      <label className=\"flex item-center gap-2\">\r\n        <input className=\"w-4 h-[22px]\" type=\"checkbox\" {...field} {...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-red-500\">{meta.error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default SignUpFormFinal;\r\n"]},"metadata":{},"sourceType":"module"}